apply plugin: 'scala'
compileJava.options.encoding = 'UTF-8'

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

sourceSets {
    test {
        scala {
            srcDirs = ['src/']
        }
    }
}

test {
    systemProperty 'javax.net.ssl.trustStore', 'build/keystore'
    jvmArgs = [ "-Dtestthreads=1" ]
}

dependencies {
    testCompile 'org.apache.commons:commons-exec:1.1'
    testCompile 'org.apache.commons:commons-lang3:3.3.2'
    testCompile 'commons-logging:commons-logging:1.1.3'
    testCompile 'org.codehaus.groovy:groovy:2.4.3'
    testCompile 'org.codehaus.groovy:groovy-json:2.4.3'
    testCompile 'org.codehaus.groovy:groovy-xml:2.4.3'
    testCompile 'com.google.guava:guava:18.0'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.apache.httpcomponents:httpmime:4.3.6'
    testCompile 'junit:junit:4.11'
    testCompile 'com.jayway.restassured:rest-assured:2.4.1'
    testCompile 'org.scalatest:scalatest_2.11:2.2.4'
    testCompile 'org.seleniumhq.selenium:selenium-java:2.45.0'
    testCompile 'io.spray:spray-testkit_2.11:1.3.3'
    testCompile 'com.google.code.tempus-fugit:tempus-fugit:1.2-SNAPSHOT'

    testCompile project(':common:scala')
    testCompile project(':core:controller')
    testCompile project(':core:loadBalancer')
    testCompile project(':core:dispatcher')
}

task deleteKeystore(type:Delete) {
    delete 'build/keystore'
}
task createKeystore(dependsOn:deleteKeystore, type:Exec) {
    commandLine 'keytool', '-import', '-alias', 'Whisk', '-noprompt', '-trustcacerts', '-file', '../config/keys/openwhisk-self-cert.pem', '-keystore', 'build/keystore', '-storepass', 'openwhisk'
}
build.finalizedBy createKeystore
