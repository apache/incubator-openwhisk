<!-- vim: set expandtab ts=4 sw=4 : -->

<project basedir="../..">
    <import file="../../docker.xml" />
    <import file="../../build.xml" />

    <target name="pushKafka" >
        <var file="whisk.properties" />
        <antcall target="pushImageToRegistry">
            <param name="docker.endpoint" value="${main.docker.endpoint}" />
            <param name="docker.image.to.push" value="whisk/kafka" />
        </antcall>
    </target>

    <!-- start kafka in a container -->
    <target name="startKafka">
        <var file="whisk.properties" />
        <antcall target="pullImageFromRegistry">
            <param name="docker.image.to.pull" value="whisk/kafka" />
            <param name="docker.endpoint" value="${kafka.docker.endpoint}" />
        </antcall>
        <exec executable="docker" failonerror="true">
            <arg line="--host tcp://${kafka.docker.endpoint}" />
            <arg line="${docker.tls.cmd}" />
            <arg line="run -d --name kafka" />
            <arg line="${docker.restart.opts}" />
            <arg line="${docker.timezone.mount}" />
            <arg line="${docker.syslog.driver}" />
            <arg line="--link zookeeper:zookeeper" />
            <arg line="-p ${kafka.host.port}:${kafka.docker.port}" />
            <arg line="-p ${kafkaras.host.port}:${kafkaras.docker.port}" />
            <arg line="-e EXPOSED_HOST=${kafka.host}" />
            <arg line="-h kafka_${kafka.docker.endpoint}" />
            <arg line="${docker.registry}whisk/kafka:${docker.image.tag}" />
        </exec>
    </target>

    <target name="waitKafka">
        <var file="whisk.properties" />
        <antcall target="waitComponent">
            <param name="component" value="kafka" />
            <param name="component.host" value="${kafka.host}:${kafkaras.host.port}" />
        </antcall>
    </target>

</project>
